#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  ONEBRANCH_AME_ACR_LOGIN: onebranch.azurecr.io
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      LinuxHostVersion:
        Network: R1
      WindowsHostVersion:
        Network: R1
      EnableCDPxPAT: false
    globalSdl: # https://aka.ms/obpipelines/sdl
      isNativeCode: true
      tsa:
        enabled: false # Disable TSA to force build breaks
      policheck:
        break: true # always break the build on policheck issues.
      binskim:
        enabled: false # Temporarily disable binskim until we sort out BA2018 errors
      credscanSuppressionsPath: $(Build.SourcesDirectory)/.config/CredScanSuppressions.json

    stages:
    - stage: Set_Version
      jobs:
      - job: set_version
        displayName: Set Version
        pool:
          type: linux
        variables:
          ONEBRANCH_AME_ACR_LOGIN: onebranch.azurecr.io
          LinuxContainerImage: 'mcr.microsoft.com/onebranch/azurelinux/build:3.0'
          ob_outputDirectory: $(Build.SourcesDirectory)/bin
          ver_hash: $[ substring(variables['Build.SourceVersion'], 0, 8) ]
        steps:
        - task: PythonScript@0
          displayName: 'Set version number'
          name: verStep
          inputs:
            scriptSource: 'filePath'
            scriptPath: scripts/version.py
            arguments: '--devops'
            workingDirectory: $(Build.SourcesDirectory)
            pythonInterpreter: '/usr/bin/python3'
        - task: onebranch.pipeline.version@1
          inputs:
            system: 'Custom'
            customVersion: '$(verStep.VER_MAJOR).$(verStep.VER_MINOR).$(verStep.VER_PATCH)-$(ver_hash)-$(Build.BuildId)'

    - stage: Build_Windows
      displayName: Build Windows
      jobs:
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'AMD64'
          config: 'Debug'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'AMD64'
          config: 'Release'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'ARM64'
          config: 'Debug'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'ARM64'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'X86'
          config: 'Debug'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'X86'
          config: 'Release'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'AMD64'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          targetArch: 'X86'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'

    - stage: Build_macOS
      displayName: Build macOS
      jobs:
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          targetArch: 'AMD64'
          config: 'Debug'
          additionalArgs: '--no-asm --no-fips'
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          targetArch: 'AMD64'
          config: 'Release'
          additionalArgs: '--no-asm --no-fips'
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          targetArch: 'ARM64'
          config: 'Debug'
          additionalArgs: '--no-asm --no-fips'
          skipTests: true
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          targetArch: 'ARM64'
          config: 'Release'
          additionalArgs: '--no-asm --no-fips'
          skipTests: true
